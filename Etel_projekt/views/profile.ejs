<!DOCTYPE html>
<html lang="hu">
<head>
    <meta charset="UTF-8">
    <title>Profil</title>
    <link rel="icon" href="/img/icon.png" />
    <link rel="stylesheet" href="/css/style.css">
    <link href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css" rel="stylesheet">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
</head>
<body>
    <div id="nav" class="navbar navbar-expand-lg navbar-light bg-light fixed-top">
        <div class="container">
            <a href="/" id="home" class="navbar-brand">A nagyi étterme</a>
            <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarNav" aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
                <span class="navbar-toggler-icon"></span>
            </button>
            <div class="collapse navbar-collapse" id="navbarNav">
                <ul id="navigation" class="navbar-nav ml-auto">
                    <li class="nav-item">
                        <a href="/menu" class="nav-link">Étlap</a>
                    </li>                    <li class="nav-item"><a href="/reserve" class="nav-link">Foglalás</a></li>
                    <li class="nav-item"><a href="/reviews" class="nav-link">Vélemények</a></li>
                    <li class="nav-item"><a href="/contact" class="nav-link">Kapcsolat</a></li>
                    <% if (typeof user === 'undefined') { %>
                        <li class="nav-item">
                            <a href="/login" class="nav-link">Bejelentkezés</a>
                        </li>
                        <% } else if (user.role === 'admin'){ %>
                            <li class="nav-item">
                                <a href="/profile" class="nav-link">Profil</a>
                            </li>
                            <li>
                                <a href="/usersAdmin" class="nav-link">Felhasználók kezelése</a>
                            </li>
                            <li class="nav-item">
                                <a href="/logout" class="nav-link">Kijelentkezés</a>
                            </li>
                        <%} else { %>
                        <li class="nav-item">
                            <a href="/profile" class="nav-link">Profil</a>
                        </li>
                        <li class="nav-item">
                            <a href="/logout" class="nav-link">Kijelentkezés</a>
                        </li>
                        <% } %>
                </ul>
            </div>
        </div>
    </div>
    

<div id="profile-container" class="container mt-5">
    <h1 class="text-center mt-5 pt-5" style="margin-top: 120px !important;">Profil adatai</h1>
    
    <div class="form-group">
        <label for="email">Email:</label>
        <p id="email"><%= user.email %></p>
    </div>

    <!-- Jövőbeli foglalások -->
    <div class="form-group">
        <h2 class="text-center">Jövőbeli foglalások</h2>
        <table class="table table-bordered">
            <thead>
                <tr>
                    <th>ID</th>
                    <th>Felhasználó ID</th>
                    <th>Foglalás dátuma</th>
                    <th>Várható létszám</th>
                    <th>Műveletek</th>
                </tr>
            </thead>
            <tbody id="future-reservations-body">
                <tr>
                    <td colspan="5" class="text-center">Nincsenek jövőbeli foglalások.</td>
                </tr>
            </tbody>
        </table>
    </div>

    <!-- Múltbeli foglalások -->
    <div class="form-group">
        <h2 class="text-center" style="margin-top: 120px !important;">Múltbeli foglalások</h2>
        <table class="table table-bordered">
            <thead>
                <tr>
                    <th>ID</th>
                    <th>Felhasználó ID</th>
                    <th>Foglalás dátuma</th>
                    <th>Várható létszám</th>
                    <th>Műveletek</th>
                </tr>
            </thead>
            <tbody id="past-reservations-body">
                <tr>
                    <td colspan="5" class="text-center">Nincsenek múltbeli foglalások.</td>
                </tr>
            </tbody>
        </table>
    </div>
</div>

<!-- Új ételeket felvevő űrlap -->
<% if (user.role === 'admin'){ %>
<div id="add-food-container">
    <h2 class="text-center">Új étel felvitele</h2>
    <form method="POST" action="/addFood" enctype="multipart/form-data">
        <label for="name">Név</label>
        <input type="text" id="name" name="name" required placeholder="Étel neve">

        <label for="description">Leírás</label>
        <textarea id="description" name="description" maxlength="200" rows="3" cols="50" required placeholder="Étel leírása (max. 200 karakter)"></textarea>

        <label for="category">Kategória</label>
        <select id="category" name="category" required>
            <option value="Leves">Leves</option>
            <option value="Tészta">Tészta</option>
            <option value="Főétel" selected>Főétel</option>
            <option value="Ital">Ital</option>
            <option value="Desszert">Desszert</option>
            <option value="Szárnyas ételek">Szárnyas ételek</option>
            <option value="Gyrosok">Gyrosok</option>
            <option value="Köretek">Köretek</option>
        </select>

        <label for="price">Ár</label>
        <input type="text" id="price" name="price" required placeholder="2000">

        <label for="image_path">Kép</label>
        <input type="file" id="image_path" name="image_path" required>

        <input type="reset" name="reset_btn" value="Alapértelmezett">
        <button type="submit" id="submitFood">Mentés</button>
    </form>
</div>

<% } %>
<script>
    async function fetchReservations() {
        try {
            const response = await fetch('/list-reservations');
            const data = await response.json();

            // Jövőbeli foglalások renderelése
            const futureBody = document.getElementById('future-reservations-body');
            futureBody.innerHTML = '';
            if (data.user.bookings && data.user.bookings.length > 0) {
                data.user.bookings.forEach(booking => {
                    const row = document.createElement('tr');
                    row.innerHTML = `
                        <td>${booking.ID}</td>
                        <td>${booking.User_ID}</td>
                        <td>${new Date(booking.Reservation_Date).toLocaleString()}</td>
                        <td>${booking.Expected_Party_Size}</td>
                        <td>
                            <button class="btn btn-warning btn-sm modify-btn" data-id="${booking.ID}">Módosítás</button>
                        </td>
                    `;
                    futureBody.appendChild(row);
                });
            } else {
                futureBody.innerHTML = `<tr><td colspan="6" class="text-center">Nincsenek jövőbeli foglalások.</td></tr>`;
            }

            // Múltbeli foglalások renderelése
            const pastBody = document.getElementById('past-reservations-body');
            pastBody.innerHTML = '';
            if (data.user.pastBookings && data.user.pastBookings.length > 0) {
                data.user.pastBookings.forEach(booking => {
                    const row = document.createElement('tr');
                    row.innerHTML = `
                        <td>${booking.ID}</td>
                        <td>${booking.User_ID}</td>
                        <td>${new Date(booking.Reservation_Date).toLocaleString()}</td>
                        <td>${booking.Expected_Party_Size}</td>
                        <td>
                            <button class="btn btn-warning btn-sm modify-btn" data-id="${booking.ID}">Véleményezés</button>
                        </td>
                    `;
                    pastBody.appendChild(row);
                });
            } else {
                pastBody.innerHTML = `<tr><td colspan="5" class="text-center">Nincsenek múltbeli foglalások.</td></tr>`;
            }
        } catch (error) {
            console.error('Error loading reservations:', error);
        }
    }

    // A foglalások betöltése az oldal betöltődésekor
    document.addEventListener('DOMContentLoaded', fetchReservations);
</script>

<script src="https://code.jquery.com/jquery-3.5.1.min.js"></script>
<script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.bundle.min.js"></script>
<script>
    let reservationsData = {};

    async function fetchReservations() {
        try {
            const response = await fetch('/list-reservations');
            reservationsData = await response.json();

            const futureBody = document.getElementById('future-reservations-body');
            futureBody.innerHTML = '';
            if (reservationsData.user.bookings && reservationsData.user.bookings.length > 0) {
                reservationsData.user.bookings.forEach(booking => {
                    const row = document.createElement('tr');
                    row.innerHTML = `
                        <td>${booking.ID}</td>
                        <td>${booking.User_ID}</td>
                        <td>${new Date(booking.Reservation_Date).toLocaleString()}</td>
                        <td>${booking.Expected_Party_Size}</td>
                        <td>
                            <button class="btn btn-warning btn-sm modify-btn" data-id="${booking.ID}">Módosítás</button>
                        </td>
                    `;
                    futureBody.appendChild(row);
                });
            } else {
                futureBody.innerHTML = `<tr><td colspan="6" class="text-center">Nincsenek jövőbeli foglalások.</td></tr>`;
            }

            const pastBody = document.getElementById('past-reservations-body');
            pastBody.innerHTML = '';
            if (reservationsData.user.pastBookings && reservationsData.user.pastBookings.length > 0) {
                reservationsData.user.pastBookings.forEach(booking => {
                    const row = document.createElement('tr');
                    row.innerHTML = `
                        <td>${booking.ID}</td>
                        <td>${booking.User_ID}</td>
                        <td>${new Date(booking.Reservation_Date).toLocaleString()}</td>
                        <td>${booking.Expected_Party_Size}</td>
                        <td>
                            <button class="btn btn-warning btn-sm review-btn" data-id="${booking.ID}">Véleményezés</button>
                        </td>
                    `;
                    pastBody.appendChild(row);
                });
            } else {
                pastBody.innerHTML = `<tr><td colspan="5" class="text-center">Nincsenek múltbeli foglalások.</td></tr>`;
            }
        } catch (error) {
            console.error('Error loading reservations:', error);
        }
    }
    $(document).on('click', '.modify-btn', function() {
        const bookingId = $(this).data('id');
        
        const booking = reservationsData.user.bookings.find(b => b.ID === bookingId);
        
        if (booking) {
            $('#reservationDate').val(new Date(booking.Reservation_Date).toISOString().substring(0, 10));
            $('#expectedPartySize').val(booking.Expected_Party_Size);

            const reservationDate = new Date(booking.Reservation_Date);
            $('#reservationHour').val(reservationDate.getHours());
            $('#reservationMinute').val(reservationDate.getMinutes());
        }

        $('#modifyModal').modal('show');

        window.currentBookingId = bookingId;    
    });
    $(document).on('click', '.review-btn', function() {
        const bookingId = $(this).data('id');
        
        const booking = reservationsData.user.bookings.find(b => b.ID === bookingId);
        
        if (booking) {
            $('#reservationDate').val(new Date(booking.Reservation_Date).toISOString().substring(0, 10));
            $('#expectedPartySize').val(booking.Expected_Party_Size);

            const reservationDate = new Date(booking.Reservation_Date);
            $('#reservationHour').val(reservationDate.getHours());
            $('#reservationMinute').val(reservationDate.getMinutes());
        }

        $('#reviewModal').modal('show');

        window.currentBookingId = bookingId;    
    });

    $(document).on('click', '#deleteReservationBtn', function() {
        const bookingId = window.currentBookingId;
        
        if (bookingId) {
            console.log("Foglalás ID:", bookingId);

            $.ajax({
                url: '/deleteReservation',
                type: 'POST',
                contentType: 'application/json',
                data: JSON.stringify({ resID: bookingId }),
                success: function(response) {
                    if (response.success) {
                        alert('Foglalás sikeresen törölve.');
                        fetchReservations();
                    } else {
                        alert('Hiba történt a foglalás törlésekor: ' + response.error);
                    }
                },
                error: function(xhr, status, error) {
                    console.error('Error occurred:', error);
                    alert('Hiba történt a foglalás törlésekor.');
                }
            });
        } else {
            console.log("Nincs foglalás ID.");
        }
    });

    $(document).on('click', '#saveChangesBtn', function() {
        const bookingId = window.currentBookingId;
        const numberOfPerson = $('#expectedPartySize').val();
        const unformedDate = $('#reservationDate').val();
        const hour = $('#reservationHour').val();
        const minute = $('#reservationMinute').val();

        const limitDate = '2025-06-01';
        const currentDate = new Date();
        const unFormed = new Date($('#reservationDate').val());
        const currentFormated = currentDate.getFullYear() + '-' + (currentDate.getMonth() + 1) + '-' + currentDate.getDate();
        const formatedDate = unFormed.getFullYear() + '-' + (unFormed.getMonth() + 1) + '-' + unFormed.getDate();

        if(unformedDate > limitDate){
            alert("A megadott dátum nem lehet 2025.06.01. után.");
            return;
        }

        if(unformedDate < currentDate){
            alert("Múltba nem lehet módosítani a foglalást.");
            return;
        }

        if(formatedDate === currentFormated){
            alert("Mai foglalásokat már nem lehet módosítani.");
            return;
        }

        if(hour >= 24 || hour < 0 || minute >= 60 || minute < 0){
            alert("Nem létező óra/perc érték.");
            return;
        }

        if(hour < 10 || hour > 19 || (hour == 19 && minute > 30)){
            alert("A kiválasztott időpontban nincs nyitva az étterem.");
            return;
        }

        if(numberOfPerson <= 0 || numberOfPerson > 56){
            alert("A személyek száma min. 1 max. 56.");
            return;
        }

        if(!Number.isInteger(parseFloat(hour)) || parseFloat(hour) !== parseInt(hour, 10) 
            || !Number.isInteger(parseFloat(minute)) || parseFloat(minute) !== parseInt(minute, 10)
            || !Number.isInteger(parseFloat(numberOfPerson)) || parseFloat(numberOfPerson) !== parseInt(numberOfPerson, 10)){
                alert('Csak egész számokat lehet megadni az óra, perc és személy mezőkben.');
                return;
            }

        if (bookingId && numberOfPerson && unformedDate && hour !== "" && minute !== "") {
            const formattedDate = new Date(unformedDate);
            formattedDate.setHours(hour, minute, 0);

            console.log("Foglalás ID:", bookingId);
            console.log("Létszám:", numberOfPerson);
            console.log("Dátum:", formattedDate.toString());

            const currentDate = new Date();
            if(formattedDate < currentDate) {
                alert("Nem lehet múltbéli dátumra módosítani a foglalást!");
                return;
            }

            $.ajax({
                url: '/modify-reservation',
                type: 'POST',
                contentType: 'application/json',
                data: JSON.stringify({
                    reservationID: bookingId, 
                    numberOfPerson: numberOfPerson, 
                    unformedDate: formattedDate.toISOString()
                }),
                success: function(response) {
                    alert('Foglalás módosítva.');
                    $('#modifyModal').modal('hide');
                    fetchReservations();
                },
                error: function(xhr, status, error) {
                    console.error('Error occurred:', error);
                    alert('Hiba történt a foglalás módosítása során.');
                }
            });
        } else {
            alert('Kérjük, adja meg a módosított adatokat, beleértve az órát és percet!');
        }
    });

    $(document).on('click', '#submitFood', function(e) {
        e.preventDefault();

        var formData = new FormData();
        formData.append('name', $('#name').val());
        formData.append('description', $('#description').val() );
        formData.append('category',$('#category').val());
        formData.append('price', $('#price').val());
        formData.append('image_path', $('#image_path')[0].files[0]);

        $.ajax({
            url: 'addFood',
            type: 'POST',
            data: formData,
            processData: false,
            contentType: false,
            success: function(response){
                if (response.success) {
                    alert('Étel sikeresen hozzáadva!');
                    $('form')[0].reset();
                } else {
                    alert('Hiba: ' + response.error);
                }
            },
            error: function(xhr, status, error){
                alert('Hiba történt az étel mentése közben!');
                console.log('Hiba:', error);
                return;
            }
        })
    });

    $(document).on('click', '#submitReviewBtn', async function(e){
        e.preventDefault();

        console.log("eljut a submit query-ba");

        const rating = $('input[name="rating"]:checked').val();
        const comment = $('#textReview').val();
        const userId =  $('#userID').val();
        const reservationId = window.currentBookingId;

        if(!rating || !comment || rating == null || comment.trim() === ""){
            alert('Töltsön ki minden mezőt!');
            return;
        }

        if(comment.length > 250){
            alert('Maximum 250 karakter hosszú lehet a vélemény!');
            return;
        }

        console.log("jön az ajax hívás");

        $.ajax({
            url: '/create-review',
            type: 'POST',
            contentType: 'application/json',
            data: JSON.stringify({
                message: comment,
                score: rating,
                userId: userId, 
                reservationId: reservationId
            }),
            success: function(response){
                console.log("Sikeres véleméyn felvitel");
                alert('Vélemény sikeresen hozzáadva.');
                document.getElementById('#reviewModal').reset();
                $('#reviewModal').modal('hide');
            },
            error: function(xhr, status, error) {
                console.log('Error occurred:', error);
                alert('Hiba történt a vélemény hozzáadása során.');
                document.getElementById('#reviewModal').reset();
            }
        });
    })

    document.addEventListener('DOMContentLoaded', fetchReservations);
</script>


<!-- Modális ablak -->
<div class="modal fade" id="modifyModal" tabindex="-1" role="dialog" aria-labelledby="modifyModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="modifyModalLabel">Foglalás módosítása</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Bezárás">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <div class="form-group">
                    <label for="reservationDate">Foglalás dátuma</label>
                    <input type="date" id="reservationDate" class="form-control">
                </div>
                <div class="form-group">
                    <label for="reservationHour">Óra</label>
                    <input type="number" id="reservationHour" class="form-control" min="0" max="23" placeholder="Óra" pattern="^[0-9]+$">
                </div>
                <div class="form-group">
                    <label for="reservationMinute">Perc</label>
                    <input type="number" id="reservationMinute" class="form-control" min="0" max="59" placeholder="Perc" pattern="^[0-9]+$">
                </div>
                <div class="form-group">
                    <label for="expectedPartySize">Várható létszám</label>
                    <input type="number" id="expectedPartySize" class="form-control" pattern="^[0-9]+$">
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-danger" id="deleteReservationBtn">Foglalás törlése</button>
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Mégse</button>
                <button type="button" id="saveChangesBtn" class="btn btn-primary">Mentés</button>
            </div>
        </div>
    </div>
</div>

<!-- Modális ablak -->
<div class="modal fade" id="reviewModal" tabindex="-1" role="dialog" aria-labelledby="modifyModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="modifyModalLabel">Véleményezés</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Bezárás">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <div class="form-group">
                    <label for="rating">Értékelje éttermünket:</label>
                    <div id="rating" class="star-rating">
                        <input type="radio" id="star5" name="rating" value="5"><label for="star5" class="star">&#9733;</label>
                        <input type="radio" id="star4" name="rating" value="4"><label for="star4" class="star">&#9733;</label>
                        <input type="radio" id="star3" name="rating" value="3"><label for="star3" class="star">&#9733;</label>
                        <input type="radio" id="star2" name="rating" value="2"><label for="star2" class="star">&#9733;</label>
                        <input type="radio" id="star1" name="rating" value="1"><label for="star1" class="star">&#9733;</label>
                    </div>
                    <div id="ratingValue" class="mt-2">Kiválasztott értékelés: 0 csillag</div>
                </div>
                <div class="form-group">
                    <label for="textReview">Ossza meg tapasztalatait:</label>
                    <textarea id="textReview" class="form-control" rows="3" placeholder="Írjon egy véleményt...(max. 250 karaker)"></textarea>
                    <input type="hidden" id="userID" value="<%= user.id %>">
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Mégse</button>
                <button type="button" id="submitReviewBtn" class="btn btn-primary">Elküld</button>
            </div>
        </div>
    </div>
</div>
<script>
    const stars = document.querySelectorAll('input[name="rating"]');
    const ratingValue = document.getElementById('ratingValue');

    stars.forEach(star => {
        star.addEventListener('change', function() {
            const rating = this.value;
            ratingValue.textContent = `Kiválasztott értékelés: ${rating} csillag`;
        });
    });
</script>
</body>
</html>