<!DOCTYPE html>
<html lang="hu">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Foglalás</title>
    <style>
        /* Naptár táblázat formázása */
        table {
            border-collapse: collapse;
            width: 100%;
        }

        th, td {
            border: 1px solid black;
            padding: 8px;
            text-align: center;
        }

        /* Gombok stílusának igazítása */
        button {
            padding: 10px 20px;
            margin: 5px;
            background-color: #4CAF50;
            color: white;
            border: none;
            cursor: pointer;
        }

        button:hover {
            background-color: #45a049;
        }

        /* Központozás */
        #calendar {
            margin-top: 20px;
        }

        div {
            text-align: center;
            margin-top: 20px;
        }
    </style>
</head>
<body>

<h1 id="monthName">Foglalás</h1>

<div id="calendar"></div>

<div>
    <button id="prevMonth">Előző hónap</button>
    <button id="nextMonth">Következő hónap</button>
</div>

<script>
    function createCalendar(year, month) {
        const calendarDiv = document.getElementById('calendar');
        calendarDiv.innerHTML = ''; // Előző naptár törlése

        const firstDay = (new Date(year, month)).getDay() - 1;
        const daysInMonth = 32 - new Date(year, month, 32).getDate();

        let date = 1;
        for (let i = 0; i < 6; i++) {
            const row = document.createElement('tr');
            for (let j = 0; j < 7; j++) {
                const cell = document.createElement('td');
                if (i === 0 && j < firstDay || date > daysInMonth) {
                    cell.textContent = '';
                } else {
                    cell.textContent = date;
                    const dateString = `${year}-${(month + 1).toString().padStart(2, '0')}-${date.toString().padStart(2, '0')}`;
                    fetchFreeSpaces(dateString, cell);
                    date++;
                }
                row.appendChild(cell);
            }
            calendarDiv.appendChild(row);
        }

        const monthNames = ["január", "február", "március", "április", "május", "június", "július", "augusztus", "szeptember", "október", "november", "december"];
        document.getElementById('monthName').textContent = `${monthNames[month]} ${year}`;
        toggleNavigationButtons();
    }

    function fetchFreeSpaces(date, cell) {
        fetch(`/free-space?date=${date}`)
            .then(response => response.json())
            .then(data => {
                const freeSpaces = data.freeSpaces || [];
                const timeslotsTable = document.createElement('table');
                let time = new Date(date);
                time.setHours(10, 0, 0, 0);
                freeSpaces.forEach(freeSpace => {
                    const row = document.createElement('tr');
                    const timeCell = document.createElement('td');
                    timeCell.textContent = time.toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' });
                    const freeSpaceCell = document.createElement('td');
                    freeSpaceCell.textContent = freeSpace;
                    row.appendChild(timeCell);
                    row.appendChild(freeSpaceCell);
                    timeslotsTable.appendChild(row);
                    time.setMinutes(time.getMinutes() + 30);
                });
                cell.appendChild(timeslotsTable);
            })
            .catch(error => {
                console.error('Hiba történt a szabad helyek lekérdezésekor:', error);
                cell.textContent = 'Hiba';
            });
    }

    function toggleNavigationButtons() {
        const maxDate = new Date(today);
        maxDate.setMonth(today.getMonth() + 6);

        document.getElementById('prevMonth').style.display =
            currentYear === today.getFullYear() && currentMonth === today.getMonth() ? 'none' : 'inline-block';

        document.getElementById('nextMonth').style.display =
            new Date(currentYear, currentMonth) >= maxDate ? 'none' : 'inline-block';
    }

    const today = new Date();
    let currentYear = today.getFullYear();
    let currentMonth = today.getMonth();

    document.getElementById('prevMonth').addEventListener('click', () => {
        currentMonth--;
        if (currentMonth < 0) {
            currentMonth = 11;
            currentYear--;
        }
        createCalendar(currentYear, currentMonth);
    });

    document.getElementById('nextMonth').addEventListener('click', () => {
        currentMonth++;
        if (currentMonth > 11) {
            currentMonth = 0;
            currentYear++;
        }
        createCalendar(currentYear, currentMonth);
    });

    createCalendar(currentYear, currentMonth);
</script>

</body>
</html>
