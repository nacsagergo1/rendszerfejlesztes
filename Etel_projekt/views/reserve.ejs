<!DOCTYPE html>
<html lang="hu">
<head>
    <meta charset="UTF-8">
    <title>Asztalfoglalás</title>
    <link rel="icon" href="/img/icon.png" />
    <link rel="stylesheet" href="/css/style.css">
    <!-- Bootstrap CSS -->
    <link href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css" rel="stylesheet">
    <!-- FontAwesome (opcionális, ikonokhoz) -->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/css/all.min.css">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <style>
        /* Egyedi stílusok a naptárhoz */
        #calendar-table { width: 100%; border-collapse: collapse; margin-top: 10px; }
        #calendar-table th, #calendar-table td {
            padding: 10px; text-align: center; border: 1px solid #ddd; cursor: pointer;
        }
        .disabled { background-color: #f5a5a5; color: white; cursor: not-allowed; }
    </style>
</head>
<body>
<div id="nav" class="navbar navbar-expand-lg navbar-light bg-light fixed-top">
    <div class="container">
        <a href="/" id="home" class="navbar-brand">A nagyi étterme</a>
        <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarNav" aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
            <span class="navbar-toggler-icon"></span>
        </button>
        <div class="collapse navbar-collapse" id="navbarNav">
            <ul id="navigation" class="navbar-nav ml-auto">
                <li class="nav-item">
                    <a href="/menu" class="nav-link">Étlap</a>
                </li>
                <li class="nav-item">
                    <a href="/reserve" class="nav-link">Foglalás</a>
                </li>
                <li class="nav-item">
                    <a href="/reviews" class="nav-link">Vélemények</a>
                </li>
                <li class="nav-item">
                    <a href="/contact" class="nav-link">Kapcsolat</a>
                </li>
                <% if (typeof user === 'undefined') { %>
                <li class="nav-item">
                    <a href="/login" class="nav-link">Bejelentkezés</a>
                </li>
                <% } else if (user.role === 'admin'){ %>
                    <li class="nav-item">
                        <a href="/profile" class="nav-link">Profil</a>
                    </li>
                    <li>
                        <a href="/usersAdmin" class="nav-link">Felhasználók kezelése</a>
                    </li>
                    <li class="nav-item">
                        <a href="/logout" class="nav-link">Kijelentkezés</a>
                    </li>
                <%} else { %>
                <li class="nav-item">
                    <a href="/profile" class="nav-link">Profil</a>
                </li>
                <li class="nav-item">
                    <a href="/logout" class="nav-link">Kijelentkezés</a>
                </li>
                <% } %>
            </ul>
        </div>
    </div>
</div>

<div id="reserve-container" class="container mt-5">
    <h1 class="text-center mt-5 pt-5">Asztalfoglalás</h1>
    <div class="text-center mt-3">
        <input id="guest-count" type="number" min="1" placeholder="Hány ember?" class="form-control d-inline" style="width: 100px;">
        <button id="submit-reservation" class="action-button">Foglalás keresése <img src="img/spin.png" alt="spin" class="spin-image"></button>
    </div>
</div>

<div id="calendar-container" class="mt-4">
    <div id="month-navigation" class="text-center">
        <button id="prev-month" class="btn btn-outline-secondary">&#9664; Előző hónap</button>
        <span id="current-month" style="margin: 0 15px; font-weight: bold;"></span>
        <button id="next-month" class="btn btn-outline-secondary">Következő hónap &#9654;</button>
    </div>

    <table id="calendar-table" class="table">
        <thead>
        <tr>
            <th>Hétfő</th>
            <th>Kedd</th>
            <th>Szerda</th>
            <th>Csütörtök</th>
            <th>Péntek</th>
            <th>Szombat</th>
            <th>Vasárnap</th>
        </tr>
        </thead>
        <tbody id="calendar-body"></tbody>
    </table>
</div>

<div class="modal fade" id="timeslotModal" tabindex="-1" aria-labelledby="timeslotModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="timeslotModalLabel">Szabad időpontok</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Bezárás">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <table id="timeslots-table" class="table table-bordered">
                    <thead>
                    <tr>
                        <th>Időpont</th>
                        <th>Szabad helyek</th>
                    </tr>
                    </thead>
                    <tbody></tbody>
                </table>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Bezárás</button>
            </div>
        </div>
    </div>
</div>

<script src="https://code.jquery.com/jquery-3.5.1.min.js"></script>
<script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>

<script>
    $(document).ready(function() {
        const calendarBody = $("#calendar-body");
        const currentMonthDisplay = $("#current-month");
        const now = new Date();
        const minDate = new Date(now.getFullYear(), now.getMonth(), 1);  // Current month start
        const maxDate = new Date(now.getFullYear(), now.getMonth() + 6, 1);  // Current month + 6 months
        let currentDate = new Date();
        let guestCount = 0;

        function createCalendar(year, month) {
            calendarBody.empty();

            const firstDay = (new Date(year, month, 1).getDay() + 6) % 7;
            const daysInMonth = 32 - new Date(year, month, 32).getDate();
            let date = 1;
            let rows = [];

            for (let i = 0; i < 6; i++) {
                const row = $("<tr></tr>");
                let hasValidDate = false;

                for (let j = 0; j < 7; j++) {
                    const cell = $("<td></td>");

                    if (i === 0 && j < firstDay || date > daysInMonth) {
                        cell.text('');
                    } else {
                        const currentDay = new Date(year, month, date);
                        cell.text(date);

                        // Most már hétfőt nem jelöli pihenőnapként
                        if (currentDay.getDay() === 1) { // Hétfő (Monday)
                            cell.text("Pihenőnap");
                            cell.addClass("disabled");
                        } else {
                            const dateString = `${year}-${(month + 1).toString().padStart(2, '0')}-${date.toString().padStart(2, '0')}`;
                            cell.click(() => showTimeslots(dateString));
                        }

                        date++;
                        hasValidDate = true;
                    }
                    row.append(cell);
                }

                if (hasValidDate) {
                    rows.push(row);
                }
            }

            rows.forEach(r => calendarBody.append(r));

            const monthNames = ["január", "február", "március", "április", "május", "június", "július", "augusztus", "szeptember", "október", "november", "december"];
            currentMonthDisplay.text(`${monthNames[month]} ${year}`);
            updateButtonState(year, month);
        }

        function updateButtonState(year, month) {
            $("#prev-month").prop("disabled", year < minDate.getFullYear() || (year === minDate.getFullYear() && month <= minDate.getMonth()));
            $("#next-month").prop("disabled", year > maxDate.getFullYear() || (year === maxDate.getFullYear() && month >= maxDate.getMonth()));
        }

        function showTimeslots(date) {
            if (guestCount === 0) {
                alert("Kérjük, adja meg hány fő szeretne jönni!");
                return;
            }

            const tbody = $("#timeslots-table tbody");
            tbody.empty();

            const selectedDate = new Date(date);

            fetch(`/free-space?date=${date}`)
                .then(response => response.json())
                .then(data => {
                    const freeSpaces = data.freeSpaces || [];
                    let time = new Date(date);
                    time.setHours(10, 0, 0, 0); // Kezdő időpont pl. 10:00

                    freeSpaces.forEach(freeSpace => {
                        const row = $("<tr></tr>");
                        const formattedTime = time.toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' });
                        const timeCell = $("<td></td>")
                            .text(formattedTime)
                            .attr("data-time", time.toISOString())
                            .addClass("available");

                        const freeSpaceCell = $("<td></td>").text(freeSpace);

                        if (selectedDate < now.setHours(0, 0, 0, 0) ||
                            (selectedDate.getTime() === now.setHours(0, 0, 0, 0) && time < now)) {
                            timeCell.text("Múltbeli időpont, nem foglalható").addClass("text-danger");
                            row.addClass("disabled");
                        } else if (freeSpace >= guestCount) {
                            timeCell.click(() => confirmReservation(date, formattedTime, guestCount));
                        } else {
                            row.addClass("disabled");
                        }

                        row.append(timeCell).append(freeSpaceCell);
                        tbody.append(row);
                        time.setMinutes(time.getMinutes() + 30);
                    });

                    $("#timeslotModal").modal("show");
                })
                .catch(error => {
                    console.error('Hiba történt a szabad helyek lekérdezésekor:', error);
                    alert("Hiba történt az időpontok betöltésekor.");
                });
        }

        function confirmReservation(date, timeString, count) {
            const [year, month, day] = date.split('-').map(Number);
            const [hour, minute] = timeString.split(':').map(Number);

            const unformedDate = new Date(year, month - 1, day, hour, minute, 0); 

            $.ajax({
                url: '/reserve',
                type: 'POST',
                contentType: 'application/json',
                data: JSON.stringify({ numberOfSpaces: count, unformedDate: unformedDate }),
                success: function(response) {
                    if (response.success) {
                        alert(`Sikeres foglalás a ${date} ${timeString} dátumra ${count} fő részére.`);
                        $("#timeslotModal").modal("hide");
                    } else {
                        alert("Nincs elérhető asztal a kívánt időpontban!");
                    }
                },
                error: function(xhr, status, error) {
                    console.error("Foglalási hiba:", error);
                    alert("Hiba történt a foglalás során. Próbálja újra.");
                }
            });
        }

        $("#submit-reservation").click(function() {
            guestCount = parseInt($("#guest-count").val());
            if (isNaN(guestCount) || guestCount < 1) {
                alert("Kérjük, adjon meg érvényes létszámot.");
            } else {
                alert(`Foglalás keresése ${guestCount} fő számára.`);
            }
        });

        $("#prev-month").click(function() {
            currentDate.setMonth(currentDate.getMonth() - 1);
            createCalendar(currentDate.getFullYear(), currentDate.getMonth());
        });

        $("#next-month").click(function() {
            currentDate.setMonth(currentDate.getMonth() + 1);
            createCalendar(currentDate.getFullYear(), currentDate.getMonth());
        });

        createCalendar(currentDate.getFullYear(), currentDate.getMonth());
    });
</script>

</body>
</html>
